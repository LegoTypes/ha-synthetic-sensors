# Mixed Variable and Direct Entity Reference Example
# Demonstrates all three patterns supported by the system:
# 1. Pure variable mapping
# 2. Pure direct entity ID references
# 3. Mixed (variables + direct entity IDs in same formula)

version: "1.0"
global_settings:
  domain_prefix: "syn2"

sensors:
  # Pattern 1: Pure Variable Mapping (Clean YAML approach)
  hvac_total_clean:
    name: "HVAC Total (Clean Variables)"
    formula: "heating + cooling"  # Clean variable names
    variables:
      heating: "sensor.circuit_5_power"
      cooling: "sensor.circuit_6_power"
    unit_of_measurement: "W"
    device_class: "power"
    state_class: "measurement"

  # Pattern 2: Pure Direct Entity ID References (No variables)
  lighting_total_direct:
    name: "Lighting Total (Direct Entity IDs)"
    formula: "sensor.circuit_10_power + sensor.circuit_11_power + sensor.circuit_12_power"  # Direct entity IDs
    variables: {}  # No variable mapping needed
    unit_of_measurement: "W"
    device_class: "power"
    state_class: "measurement"

  # Pattern 3: Mixed Approach (Variables + Direct Entity IDs)
  home_consumption_mixed:
    name: "Home Consumption (Mixed Pattern)"
    formula: "hvac_total + lighting_total + sensor.major_appliances_power + sensor.water_heater_power"
    variables:
      hvac_total: "sensor.syn2_hvac_total_clean"        # Variable to synthetic sensor
      lighting_total: "sensor.syn2_lighting_total_direct"  # Variable to synthetic sensor
      # sensor.major_appliances_power and sensor.water_heater_power are direct references
    unit_of_measurement: "W"
    device_class: "power"
    state_class: "measurement"

  # Pattern 4: Cost Analysis with Mixed References
  real_time_cost:
    name: "Real-time Energy Cost"
    formula: "if(net_power > 0, net_power * input_number.electricity_buy_rate_cents_kwh / 1000, abs(net_power) * sell_rate / 1000)"
    variables:
      net_power: "sensor.span_panel_current_power"  # Variable mapping
      sell_rate: "input_number.electricity_sell_rate_cents_kwh"  # Variable mapping
      # input_number.electricity_buy_rate_cents_kwh is direct reference
    unit_of_measurement: "Â¢/h"
    device_class: "monetary"
    state_class: "measurement"

  # Pattern 5: Solar Analytics with Self-Referencing
  solar_self_consumption:
    name: "Solar Self-Consumption"
    formula: "max(0, solar_production - sensor.syn2_solar_export)"  # Mixed: variable + direct synthetic sensor reference
    variables:
      solar_production: "sensor.span_panel_solar_inverter_instant_power"
      # sensor.syn2_solar_export would be direct reference to another synthetic sensor
    unit_of_measurement: "W"
    device_class: "power"
    state_class: "measurement"

  # Pattern 6: Grid vs Solar Comparison
  grid_vs_solar:
    name: "Grid vs Solar Comparison"
    formula: "sensor.span_panel_current_power - sensor.span_panel_solar_inverter_instant_power + backup_battery"  # Mixed: direct + variable
    variables:
      backup_battery: "sensor.battery_power"
      # Both sensor.span_panel_* are direct references
    unit_of_measurement: "W"
    device_class: "power"
    state_class: "measurement"
