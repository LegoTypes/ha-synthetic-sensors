# Test Scenario 5.4: Self-Reference Detection
# Purpose: Test attribute references itself
# Expected: CircularDependencyError is raised
# Validation: Self-references are detected and prevented

sensors:
  # Test self-referencing attribute (should cause error)
  self_reference_test:
    entity_id: sensor.span_panel_instantaneous_power
    formula: state * 0.25  # Main result = 250 cents/h (assuming 1000W backing entity)
    attributes:
      # This attribute references itself - should cause CircularDependencyError
      self_referencing_attr:
        formula: self_referencing_attr * 1.1  # Self-reference!
        metadata:
          unit_of_measurement: cents/h
          friendly_name: "Self Referencing Attribute"
      # This should work fine
      normal_attr:
        formula: state * 2  # 500 cents/h
        metadata:
          unit_of_measurement: cents/h
          friendly_name: "Normal Attribute"
    metadata:
      unit_of_measurement: cents/h
      device_class: monetary
      friendly_name: "Self Reference Test"

  # Test self-reference with state attribute (should cause error)
  self_reference_state_test:
    entity_id: sensor.span_panel_instantaneous_power
    formula: state * 1.1  # Main result = 1100W (assuming 1000W backing entity)
    attributes:
      # This attribute references its own voltage attribute - should cause error
      voltage:
        formula: state.voltage + 1  # Self-reference to its own voltage attribute
        metadata:
          unit_of_measurement: V
          friendly_name: "Voltage (Self Reference)"
      # This should work fine
      power_kw:
        formula: state / 1000  # 1.1 kW
        metadata:
          unit_of_measurement: kW
          friendly_name: "Power (kW)"
    metadata:
      unit_of_measurement: W
      device_class: power
      friendly_name: "Self Reference State Test"

  # Test self-reference in complex calculation (should cause error)
  complex_self_reference:
    entity_id: sensor.span_panel_instantaneous_power
    formula: state * 0.25  # Main result = 250 cents/h (assuming 1000W backing entity)
    attributes:
      # Base attribute
      base_cost:
        formula: state  # 250 cents/h
        metadata:
          unit_of_measurement: cents/h
          friendly_name: "Base Cost"
      # Self-referencing attribute with complex calculation
      complex_self_ref:
        formula: complex_self_ref * 0.1 + base_cost * 0.9  # Self-reference in complex formula
        metadata:
          unit_of_measurement: cents/h
          friendly_name: "Complex Self Reference"
      # This should work fine
      derived_cost:
        formula: base_cost * 24  # 6000 cents/day
        metadata:
          unit_of_measurement: cents/day
          friendly_name: "Derived Cost"
    metadata:
      unit_of_measurement: cents/h
      device_class: monetary
      friendly_name: "Complex Self Reference Test"

  # Test self-reference with conditional logic (should cause error)
  conditional_self_reference:
    entity_id: sensor.span_panel_instantaneous_power
    formula: state * 1.1  # Main result = 1100W (assuming 1000W backing entity)
    attributes:
      # Self-reference in conditional expression
      conditional_attr:
        formula: conditional_attr if state > 1000 else state  # Self-reference in condition
        metadata:
          unit_of_measurement: W
          friendly_name: "Conditional Self Reference"
      # This should work fine
      simple_attr:
        formula: state / 1000  # 1.1 kW
        metadata:
          unit_of_measurement: kW
          friendly_name: "Simple Attribute"
    metadata:
      unit_of_measurement: W
      device_class: power
      friendly_name: "Conditional Self Reference Test"