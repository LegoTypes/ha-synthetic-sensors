repos:
  # Pre-commit hooks for essential file checks only
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-yaml
        exclude: '\..*_cache/.*|dist/.*|venv/.*|tests/yaml_fixtures/invalid/.*'
      - id: check-toml
        exclude: '\..*_cache/.*|dist/.*|venv/.*'
      - id: check-json
        exclude: '\..*_cache/.*|dist/.*|venv/.*'
      - id: check-added-large-files
      - id: check-merge-conflict
        exclude: '\..*_cache/.*|dist/.*|venv/.*'
      - id: debug-statements
        exclude: '^tests/.*|\..*_cache/.*|dist/.*|venv/.*'
      # Handle trailing whitespace (including blank lines) before Black runs
      - id: trailing-whitespace
        exclude: '\..*_cache/.*|dist/.*|venv/.*'

  # Ruff for linting and import sorting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.11.13
    hooks:
      - id: ruff-check
        args: ['--fix']
        exclude: '^tests/.*|\..*_cache/.*|dist/.*|venv/.*|vulture_whitelist\.py$'

  # Ruff for formatting (runs after linting fixes)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.11.13
    hooks:
      - id: ruff-format
        exclude: '\..*_cache/.*|dist/.*|venv/.*|vulture_whitelist\.py$'

  # MyPy for type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.16.0
    hooks:
      - id: mypy
        additional_dependencies:
          - pyyaml
          - simpleeval
          - voluptuous
          - pytest
          - typing-extensions
          - types-PyYAML
          - types-jsonschema
          - homeassistant-stubs
        args: ['--config-file=pyproject.toml']
        exclude: '^tests/.*|docs/.*|scripts/.*|examples/.*|\..*_cache/.*|dist/.*|venv/.*|vulture_whitelist\.py$'

  # Pylint for additional code quality checks
  - repo: https://github.com/PyCQA/pylint
    rev: v3.3.4
    hooks:
      - id: pylint
        additional_dependencies:
          - pyyaml
          - simpleeval
          - voluptuous
          - pytest
          - typing-extensions
          - homeassistant-stubs
        args: ['--rcfile=pyproject.toml']
        exclude: '^tests/.*|docs/.*|examples/.*|test_.*\.py$|.*_test\.py$|\..*_cache/.*|dist/.*|venv/.*|vulture_whitelist\.py$'

  # Vulture for dead code detection
  - repo: https://github.com/jendrikseipp/vulture
    rev: v2.14
    hooks:
      - id: vulture
        args: ['src/', 'vulture_whitelist.py', '--min-confidence=80']
        exclude: '^tests/.*|docs/.*|examples/.*|scripts/.*|\..*_cache/.*|dist/.*|venv/.*'

  # Markdownlint for markdown files
  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: v0.18.1
    hooks:
      - id: markdownlint-cli2
        args: ['--fix', '--config', '.markdownlint-cli2.jsonc']
        exclude: '\..*_cache/.*|dist/.*|venv/.*|\.venv/.*|node_modules/.*|htmlcov/.*'

  # Check for common security issues
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.3
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        exclude: '^tests/.*|\..*_cache/.*|dist/.*|venv/.*'

  # Poetry check for pyproject.toml validation and lock file consistency
  - repo: https://github.com/python-poetry/poetry
    rev: 2.1.3
    hooks:
      - id: poetry-check
      - id: poetry-lock

  # Quick coverage check (total only, no details)
  - repo: local
    hooks:
      - id: pytest-cov-summary
        name: coverage summary
        entry: bash
        language: system
        args: ['-c', 'output=$(poetry run pytest tests/ --cov=src/ha_synthetic_sensors --cov-config=pyproject.toml -q 2>&1); if echo "$output" | grep -q "FAILED"; then echo "$output"; exit 1; else echo "$output" | grep -E "(passed|TOTAL)" | tr "\n" " " | sed "s/=*//g"; echo; fi']
        pass_filenames: false
        always_run: true
        verbose: true
