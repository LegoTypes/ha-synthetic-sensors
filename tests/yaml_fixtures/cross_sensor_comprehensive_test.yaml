version: "1.0"

sensors:
  # Sensor A: Base power sensor with self-references and variables
  base_power_sensor:
    name: "Base Power Sensor"
    entity_id: sensor.span_panel_instantaneous_power
    formula: state * scaling_factor  # Self-reference using state token + variable
    variables:
      scaling_factor: 1.1
      efficiency_base: 0.95
    attributes:
      daily_power:
        formula: state * 24  # Self-reference in attribute (uses main sensor post-eval result)
        metadata:
          unit_of_measurement: "Wh"
      efficiency_percent:
        formula: state / (state / scaling_factor) * 100  # Complex self-reference formula
        metadata:
          unit_of_measurement: "%"
      adjusted_power:
        formula: state * efficiency_base  # Self-reference + inherited variable
        metadata:
          unit_of_measurement: "W"
    metadata:
      unit_of_measurement: "W"
      device_class: "power"
      state_class: "measurement"

  # Sensor B: Cross-sensor references with entity collision handling
  efficiency_calc:
    name: "Efficiency Calculation"
    entity_id: sensor.span_panel_instantaneous_power  # Same entity_id as Sensor A (collision)
    formula: base_power_sensor * efficiency_factor  # Cross-sensor reference to Sensor A
    variables:
      efficiency_factor: 0.85
      local_scale: 0.9
    attributes:
      combined_power:
        formula: state + base_power_sensor  # Self + cross-sensor reference in attribute
        metadata:
          unit_of_measurement: "W"
      power_ratio:
        formula: state / base_power_sensor * 100  # Cross-sensor calculation in attribute
        metadata:
          unit_of_measurement: "%"
      complex_calc:
        formula: (state * local_scale) + (base_power_sensor * efficiency_factor)  # Mixed references
        metadata:
          unit_of_measurement: "W"
    metadata:
      unit_of_measurement: "W"
      device_class: "power"
      state_class: "measurement"

  # Sensor C: Multiple cross-sensor references and attribute-to-attribute
  power_analytics:
    name: "Power Analytics"
    formula: base_power_sensor + efficiency_calc  # References both previous sensors
    attributes:
      total_daily:
        formula: hourly_total * 24  # A-A reference (attribute-to-attribute)
        metadata:
          unit_of_measurement: "Wh"
      hourly_total:
        formula: state  # Self-reference (main sensor result)
        metadata:
          unit_of_measurement: "W"
      sensor_comparison:
        formula: base_power_sensor - efficiency_calc  # Cross-sensor subtraction
        metadata:
          unit_of_measurement: "W"
      percentage_diff:
        formula: (base_power_sensor - efficiency_calc) / base_power_sensor * 100  # Complex cross-sensor calc
        metadata:
          unit_of_measurement: "%"
    metadata:
      unit_of_measurement: "W"
      device_class: "power"
      state_class: "measurement"