# YAML fixture for boolean handler integration tests
# Used by: test_boolean_handler_integration.py
# Test cases covered:
# - Boolean logic sensors using Python operators (and, or, not)
# - Entity state comparisons in boolean expressions
# - Verification that symbolic operators (&&, ||, !) are not used
# - Explicit control: unquoted names for boolean, quoted strings for comparison

version: "1.0"

global_settings:
  device_identifier: "test_device_123"

sensors:
  door_lock_and:
    name: "Door Lock AND Sensor"
    formula: "door_state == 'locked' and motion_state == 'clear'"
    variables:
      door_state: "binary_sensor.front_door"
      motion_state: "binary_sensor.motion_detector"
    metadata:
      device_class: "safety"

  presence_or:
    name: "Presence OR Sensor"
    formula: "home_presence == 'home' or work_presence == 'office'"
    variables:
      home_presence: "device_tracker.phone_home"
      work_presence: "device_tracker.phone_work"
    metadata:
      device_class: "presence"

  security_check:
    name: "Security Check Sensor"
    formula: "not (alarm_state == 'disarmed') and door_state == 'locked'"
    variables:
      alarm_state: "alarm_control_panel.home_alarm"
      door_state: "binary_sensor.front_door"
    metadata:
      device_class: "safety"

  temperature_comfort:
    name: "Temperature Comfort"
    formula: "temperature >= min_temp and temperature <= max_temp"
    variables:
      temperature: "sensor.living_room_temperature"
      min_temp: 18
      max_temp: 24
    metadata:
      device_class: "temperature"
      unit_of_measurement: "Â°C"

  direct_binary_test:
    name: "Direct Binary Sensor Test"
    formula: "binary_sensor.test_direct == on"  # Direct binary_sensor entity reference comparison
    metadata:
      device_class: "safety"

  variable_binary_test:
    name: "Variable Binary Test"
    formula: "test_sensor == on"  # Variable comparison with unquoted 'on'
    variables:
      test_sensor:
        formula: "binary_sensor.test_direct == on"  # Formula that tests boolean
    metadata:
      device_class: "safety"

  boolean_variable_conditional:
    name: "Boolean Variable Conditional Test"
    formula: "state"
    variables:
      door_status: "binary_sensor.front_door"
    attributes:
      debug_door_status: door_status
      debug_conditional_result:
        formula: "'closed' if not door_status else 'open'"
        alternate_states:
          FALLBACK: unknown
    metadata:
      device_class: "door"